name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - terraform-poc
      - master
      
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev, sit, uat, prod)"
        required: true
        default: "dev"

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    env:
      ENV_NAME: ${{ github.event.inputs.environment || 'dev' }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var-file=envs/${{ env.ENV_NAME }}.tfvars

      - name: Upload plan for approval
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.ENV_NAME }}
          path: tfplan

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'dev' }}
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.event.inputs.environment || 'dev' }}
          path: .

      - name: Terraform Apply (Requires Approval)
        run: terraform apply tfplan
